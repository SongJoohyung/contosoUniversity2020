@model contosoUniversity2020.Models.Enrollment

@{
    var mode = ViewData["mode"];
    var title = mode + " Grade";
    ViewData["Title"] = title;
}

<h1>@ViewData["Title"]</h1>
<hr />
<h3>Student:  @Html.DisplayFor(model => model.Student.FullName)</h3>
<h4>Course:  @Html.DisplayFor(model => model.Course.Title)</h4>
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Student.FullName" class="control-label"></label>
                <input asp-for="Student.FullName" class="form-control" readonly />
            </div>
            <div class="form-group">
                <label asp-for="Course.Title" class="control-label"></label>
                <input asp-for="Course.Title" class="form-control" readonly />
            </div>
            <div class="form-group">
                <label asp-for="Grade" class="control-label"></label>
                <select asp-for="Grade" class="form-control"
                        asp-items="Html.GetEnumSelectList<Grade>()">
                    <option value="">No Grade Yet</option>
                </select>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
